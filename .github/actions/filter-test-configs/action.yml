name: Filter test configs matrix

description: |
  Apply filter to the test configs matrix to keep only entries specified
  by the PR test-config labels. If no test-config label is set, the same
  test configs matrix is returned untouched.

inputs:
  github-token:
    description: GITHUB_TOKEN
    required: true
  test-matrix:
    required: true
    type: string
    description: JSON description of what test configs to run.

outputs:
  test-matrix:
    description: The filtered test configs matrix.
    value: ${{ steps.filter.outputs.test-matrix }}
  is-test-matrix-empty:
    description: True if the filtered test configs matrix is empty. False otherwise.
    value: ${{ steps.filter.outputs.is-test-matrix-empty }}
  keep-going:
    description: True if keep-going label was on PR.
    value: ${{ steps.filter.outputs.keep-going }}

runs:
  using: composite
  steps:
    - uses: nick-fields/retry@3e91a01664abd3c5cd539100d10d33b9c5b68482
      name: Setup dependencies
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        shell: bash
        timeout_minutes: 10
        max_attempts: 5
        retry_wait_seconds: 30
        command: |
          set -eux

          if [[ -z "${CONDA_RUN:-}" ]]; then
            # If no conda has been setup, try to use system python
            python3 -m pip install requests==2.26.0 pyyaml==6.0
          else
            # Windows miniconda, unfortunately, doesn't have a python3 binary, but
            # its python is python3
            if ${CONDA_RUN} which python3; then
              echo "PYTHON=python3" >> "${GITHUB_ENV}"
            else
              echo "PYTHON=python" >> "${GITHUB_ENV}"
            fi
          fi

    - name: Parse ref
      shell: bash
      id: parse-ref
      run: |
        if [[ -z "${CONDA_RUN:-}" ]]; then
          .github/scripts/parse_ref.py
        else
          ${CONDA_RUN} ${PYTHON} .github/scripts/parse_ref.py
        fi

    - name: Select all requested test configurations
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      id: filter
      run: |
        if [[ -z "${CONDA_RUN:-}" ]]; then
          .github/scripts/filter_test_configs.py \
            --test-matrix "${{ inputs.test-matrix }}" \
            --pr-number "${{ github.event.pull_request.number }}" \
            --tag "${{ steps.parse-ref.outputs.tag }}" \
            --event-name "${{ github.event_name }}" \
            --schedule "${{ github.event.schedule }}"
        else
          # Replace new lines in the test matrix JSON with space. The JSON structure remains
          # the same. This is needed becaue Windows conda is rather dumb and breaks the command
          # at new lines
          TEST_MATRIX=$(echo "${{ inputs.test-matrix }}" | tr "\n" " ")

          ${CONDA_RUN} ${PYTHON} .github/scripts/filter_test_configs.py \
            --test-matrix "$TEST_MATRIX" \
            --pr-number "${{ github.event.pull_request.number }}" \
            --tag "${{ steps.parse-ref.outputs.tag }}" \
            --event-name "${{ github.event_name }}" \
            --schedule "${{ github.event.schedule }}"
        fi

    - name: Print the filtered test matrix
      shell: bash
      run: |
        echo "${{ steps.filter.outputs.test-matrix }}"
