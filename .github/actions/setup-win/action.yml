name: Setup Windows

description: Set up for windows jobs

inputs:
  cuda-version:
    description: which cuda version to install, 'cpu' for none
    required: true

runs:
  using: composite
  steps:
    - name: Display EC2 information
      shell: bash
      run: |
        set -euo pipefail
        function get_ec2_metadata() {
          # Pulled from instance metadata endpoint for EC2
          # see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html
          category=$1
          curl -fsSL "http://169.254.169.254/latest/meta-data/${category}"
        }
        echo "ami-id: $(get_ec2_metadata ami-id)"
        echo "instance-id: $(get_ec2_metadata instance-id)"
        echo "instance-type: $(get_ec2_metadata instance-type)"
        echo "system info $(uname -a)"

    # Needed for binary builds, see: https://github.com/pytorch/pytorch/issues/73339#issuecomment-1058981560
    - name: Enable long paths on Windows
      shell: powershell
      run: |
        Set-ItemProperty -Path "HKLM:\\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1

    # Since it's just a defensive command, the workflow should continue even the command fails
    - name: Disables Windows Defender scheduled and real-time scanning for files in pytorch directory.
      shell: powershell
      run: |
        Add-MpPreference -ExclusionPath $(Get-Location).tostring() -ErrorAction Ignore

    - name: Setup conda
      shell: bash
      run: |
        # Windows conda is baked into the AMI at this location
        CONDA="C:\Jenkins\Miniconda3\condabin\conda.bat"

        {
          echo "CONDA_RUN=${CONDA} run --no-capture-output";
          echo "CONDA_BUILD=${CONDA} run conda-build";
          echo "CONDA_INSTALL=${CONDA} install";
        } >> "${GITHUB_ENV}"

    - name: Make conda Python available as Python3
      shell: powershell
      run: |
        $Env:PATH += ";C:\Jenkins\Miniconda3"
        # Add conda path to the powershell profile to make it persistent
        Add-Content "$PSHOME\Microsoft.PowerShell_profile.ps1" '$Env:PATH += ";C:\Jenkins\Miniconda3"'

        try {
          $PYTHON = (Get-Command python).Source
        } catch {
          $PYTHON = ""
        }

        If ("$PYTHON" -eq "") {
          Write-Host "Found no Python in $Env:PATH. Double check that Miniconda3 is setup correctly in the Windows AMI"
        }
        Else {
          Write-Host "Found Python command at $PYTHON"
        }

        try {
          $PYTHON3 = (Get-Command python3).Source
        } catch {
          $PYTHON3 = ""
        }

        If ("$PYTHON3" -eq "") {
          Write-Host "Found no Python 3 in $Env:PATH. This is expected for Miniconda3, and the command will be an alias to Python"
        }
        Else {
          Write-Host "Found Python 3 command at $PYTHON3"
        }

        $PS_PROFILE = "$PSHOME\Microsoft.PowerShell_profile.ps1"
        # According to https://docs.conda.io/en/latest/miniconda.html, we are using the Miniconda3 installation,
        # which is Python 3 based. Its Python is default to Python 3. As an additional note, there is also
        # Miniconda installation that is Python 2 based, and both can be installed if needed
        If (("$PYTHON3" -eq "") -and ("$PYTHON" -ne "")) {
          Add-Content "$PS_PROFILE" "Set-Alias -Name python3 -Value $PYTHON"
        }

        # Reload the profile to update the path
        . "$PS_PROFILE"
